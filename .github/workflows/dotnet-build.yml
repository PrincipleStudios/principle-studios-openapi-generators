name: All packages build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
            dotnet-version: 6.0.x
    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 16
        registry-url: ${{ github.ref != 'refs/heads/main' && 'https://npm.pkg.github.com/' || 'https://registry.npmjs.org/' }}
        scope: '@principlestudios'

    - name: Cache nuget packages
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    ###########
    # BUILD
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: |
        if [[ $VERSION_SUFFIX ]]; then
          VERSION_SUFFIX_PARAM="--version-suffix sha.$VERSION_SUFFIX"
        else
          VERSION_SUFFIX_PARAM=''
        fi
        dotnet build --no-restore --configuration Release ${VERSION_SUFFIX_PARAM}
      env:
        VERSION_SUFFIX: ${{ github.ref != 'refs/heads/main' && github.sha || '' }}
    - name: Finish building TypeScript DLL
      working-directory: ./generators/typescript
      run: dotnet publish ./PrincipleStudios.OpenApiCodegen.Client.TypeScript/PrincipleStudios.OpenApiCodegen.Client.TypeScript.csproj -c Release -p:UseAppHost=false -o ./npm/dotnet
    - name: Install node packages for typescript
      working-directory: ./generators/typescript/npm
      run: npm ci
    - name: Pack typescript npm package
      working-directory: ./generators/typescript/npm
      run: |
        npm pack
        mkdir ../../out/
        cp ./principlestudios-openapi-codegen-typescript-[0-9]*.tgz ../../out/principlestudios-openapi-codegen-typescript.tgz
    - name: Install typescript-rxjs
      working-directory: ./generators/typescript-rxjs/npm
      run: |
        pattern="../../out/principlestudios-openapi-codegen-typescript.tgz"
        npm i -D "$(echo $pattern)"
        npm i
    - name: Pack typescript-rxjs npm package
      working-directory: ./generators/typescript-rxjs/npm
      run: npm pack

    ###########
    # TEST
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release --collect:"XPlat Code Coverage"
    - name: 'Upload Code Coverage'
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage
        path: ./lib/*/TestResults/*/coverage.cobertura.xml
        retention-days: 7
    # - name: Record code coverage
    #   uses: 5monkeys/cobertura-action@master
    #   with:
    #     path: ./lib/*/TestResults/*/coverage.cobertura.xml
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     minimum_coverage: 90
    #     fail_below_threshold: false
    - name: Test package for typescript
      working-directory: ./generators/typescript/npm
      run: npm test
    - name: Test package for typescript-rxjs
      working-directory: ./generators/typescript-rxjs/npm
      run: npm test

    ###########
    # PUBLISH
    - name: Publish NuGet packages to GitHub registry if new version number
      if: ${{ github.ref != 'refs/heads/main' }}
      run: dotnet nuget push ./artifacts/packages/Release/*.nupkg -k ${GITHUB_TOKEN} -s https://nuget.pkg.github.com/$GITHUB_REPOSITORY_OWNER/index.json --skip-duplicate --no-symbols
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish NuGet packages to NuGet registry if new version number
      if: ${{ github.ref == 'refs/heads/main' }}
      run: dotnet nuget push ./artifacts/packages/Release/*.nupkg -k ${NUGET_API_KEY} -s https://api.nuget.org/v3/index.json --skip-duplicate --no-symbols
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    - name: Set publish NPM registry
      if: ${{ github.ref == 'refs/heads/main' }}
      run:  |
        echo '@principlestudios:registry=$NODE_REGISTRY' > ~/.npmrc
      env:
        NODE_REGISTRY: ${{ github.ref != 'refs/heads/main' && 'https://npm.pkg.github.com/' || 'https://registry.npmjs.org/' }}
    - name: Publish typescript npm package
      working-directory: ./generators/typescript/npm
      run:  |
        if [[ $IS_PRERELEASE ]]; then npm version prerelease --preid=branch.$IS_PRERELEASE; fi
        npm publish || echo 'npm publish optional'
      continue-on-error: true # npm publish does not have a `--skip-duplicate` switch
      env:
        IS_PRERELEASE: ${{ github.ref != 'refs/heads/main' && github.sha || '' }}
        NODE_AUTH_TOKEN: "${{ github.ref == 'refs/heads/main' && secrets.NPM_TOKEN || secrets.GITHUB_TOKEN }}"
    - name: Publish typescript-rxjs npm package
      working-directory: ./generators/typescript-rxjs/npm
      run: |
        if [[ $IS_PRERELEASE ]]; then npm version prerelease --preid=branch.$IS_PRERELEASE; fi
        npm publish || echo 'npm publish optional'
      continue-on-error: true # npm publish does not have a `--skip-duplicate` switch
      env:
        IS_PRERELEASE: ${{ github.ref != 'refs/heads/main' && github.sha || '' }}
        NODE_AUTH_TOKEN: "${{ github.ref == 'refs/heads/main' && secrets.NPM_TOKEN || secrets.GITHUB_TOKEN }}"
