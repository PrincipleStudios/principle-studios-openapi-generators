<Project>
    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <ImportByWildcardAfterMicrosoftCommonTargets>false</ImportByWildcardAfterMicrosoftCommonTargets>
        <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>

        <NpmInstallScript Condition=" '$(NpmInstallScript)' == '' and $(Configuration) != 'Release' ">npm install</NpmInstallScript>
        <NpmInstallScript Condition=" '$(NpmInstallScript)' == '' and $(Configuration) == 'Release' ">npm ci</NpmInstallScript>
        <NpmInstallRecordPath Condition=" '$(NpmInstallRecordPath)' == '' ">$(ProjectDir)node_modules\_$(Configuration)._</NpmInstallRecordPath>
        <NpmBuildScript Condition=" '$(NpmBuildScript)' == '' ">npm run build</NpmBuildScript>
        <NpmTestScript Condition=" '$(NpmTestScript)' == '' ">npm test</NpmTestScript>
    </PropertyGroup>

    <ItemGroup>
        <Compile Include="src/**" />
        <CompileConfig Include="tsconfig.build.json" />
        <CompileConfig Include="package.json" />
        <CompileConfig Include="package-lock.json" />

        <NpmPackagedFiles Include="@(Compile->'$(ProjectDir)/lib/%(filename).js');@(Compile->'$(ProjectDir)/lib/%(filename).d.ts')" />
        <NpmPackagedFiles Include="@(CompileConfig)" />

        <PackageReference Include="JsonPeek" Version="1.2.0" PrivateAssets="All" />
    </ItemGroup>

    <Target Name="_PrepareClean" BeforeTargets="CoreClean">
        <ItemGroup>
            <Clean Include="@(Compile->'$(ProjectDir)lib/%(filename).js');@(Compile->'$(ProjectDir)lib/%(filename).d.ts')" />
        </ItemGroup>
    </Target>

    <Target Name="_LoadPackageJson">
        <JsonPeek ContentPath="package.json" Query="$.name">
            <Output TaskParameter="Result" ItemName="NpmPackageName" />
        </JsonPeek>
        <JsonPeek ContentPath="package.json" Query="$.version">
            <Output TaskParameter="Result" ItemName="OriginalNpmPackageVersion" />
        </JsonPeek>

        <PropertyGroup>
            <NpmPackageName>@(NpmPackageName->'%(Identity)')</NpmPackageName>
            <NpmPackageNormalizedName>@(NpmPackageName->'%(Identity)'->Replace("@", "")->Replace("/", "-"))</NpmPackageNormalizedName>
            <OriginalNpmPackageVersion>@(OriginalNpmPackageVersion->'%(Identity)')</OriginalNpmPackageVersion>
        </PropertyGroup>
    </Target>

    <Target Name="NpmInstall" BeforeTargets="Restore;_GenerateProjectRestoreGraph" Inputs="$(ProjectDir)package.json;$(ProjectDir)package-lock.json" Outputs="$(NpmInstallRecordPath)">
        <Exec WorkingDirectory="$(ProjectDir)" Command="$(NpmInstallScript)" />
        <Touch AlwaysCreate="true" ForceTouch="true" Files="$(NpmInstallRecordPath)" />
    </Target>

    <Target Name="NodeBuild" BeforeTargets="Build" Inputs="@(Compile);@(CompileConfig)" Outputs="@(Compile->'$(ProjectDir)/lib/%(filename).js');@(Compile->'$(ProjectDir)/lib/%(filename).d.ts')">
        <Exec WorkingDirectory="$(ProjectDir)" Command="$(NpmBuildScript)" />
    </Target>

    <Target Name="NpmPack" BeforeTargets="Publish" DependsOnTargets="_LoadPackageJson;NodeBuild" Inputs="@(NpmPackagedFiles)" Outputs="$(PackageOutputPath)$(NpmPackageNormalizedName)-$(Version).tgz">
        <JsonPeek ContentPath="package.json" Query="$.version">
            <Output TaskParameter="Result" ItemName="OriginalNpmPackageVersion" />
        </JsonPeek>
        <Exec WorkingDirectory="$(ProjectDir)" Command="npm version $(Version)" IgnoreExitCode="true" />
        <MakeDir Directories="$(PackageOutputPath)"/>
        <Exec WorkingDirectory="$(ProjectDir)" Command="npm pack --pack-destination $(PackageOutputPath)" />
        <Exec WorkingDirectory="$(ProjectDir)" Command="npm version $(OriginalNpmPackageVersion)" IgnoreExitCode="true" />
    </Target>

    <Target Name="VSTest">
        <CallTarget Condition="'$(VSTestNoBuild)' != 'true'" Targets="Build" />

        <Exec WorkingDirectory="$(ProjectDir)" Command="$(NpmTestScript)" />
    </Target>

    <Target Name="_PackOnBuild" AfterTargets="Build" DependsOnTargets="NpmPack" Condition="'$(PackNpmOnBuild)'=='true'" />

</Project>