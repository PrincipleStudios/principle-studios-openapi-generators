// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`typescript-rxjs petstore.yaml can generate the files: C:\\Users\\mattd\\Source\\openapi-codegen\\generators\\typescript-rxjs\\out.local.petstore\\apis\\DefaultApi.ts 1`] = `
"/* eslint-disable */
/**
 * Swagger Petstore
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Templates provided by Principle. (https://github.com/mdekrey/principle-studios-openapi-generators)
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, HttpQuery, throwIfNullOrUndefined, encodeURI, RequestOpts, ResponseArgs, ProgressResponse, StandardResponse } from '../runtime';
import {
    NewPet,
    Pet,
} from '../models';

export type AddPetRequest = {
    newPet: NewPet;
}

export type AddPetResponse200 = Pet;
export type AddPetResponseOther = Error;
export type AddPetResponse =
  | StandardResponse<200, AddPetResponse200>
  | StandardResponse<\\"other\\", AddPetResponseOther>;

export type DeletePetRequest = {
    id: number;
}

export type DeletePetResponse204 = void;
export type DeletePetResponseOther = Error;
export type DeletePetResponse =
  | StandardResponse<204, DeletePetResponse204>
  | StandardResponse<\\"other\\", DeletePetResponseOther>;

export type FindPetByIdRequest = {
    id: number;
}

export type FindPetByIdResponse200 = Pet;
export type FindPetByIdResponseOther = Error;
export type FindPetByIdResponse =
  | StandardResponse<200, FindPetByIdResponse200>
  | StandardResponse<\\"other\\", FindPetByIdResponseOther>;

export type FindPetsRequest = {
    tags?: Array<string>;
    limit?: number;
}

export type FindPetsResponse200 = Array<Pet>;
export type FindPetsResponseOther = Error;
export type FindPetsResponse =
  | StandardResponse<200, FindPetsResponse200>
  | StandardResponse<\\"other\\", FindPetsResponseOther>;

/**
 * no description
 */
export class DefaultApiRequests {

    /**
     * Creates a new pet in the store. Duplicates are allowed
     */
    static readonly addPet = ({ newPet }: AddPetRequest): RequestOpts => {
        throwIfNullOrUndefined(newPet, 'addPet');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return {
            path: '/pets',
            method: 'POST',
            headers,
            body: newPet,
        };
    };

    /**
     * deletes a single pet based on the ID supplied
     */
    static readonly deletePet = ({ id }: DeletePetRequest): RequestOpts => {
        throwIfNullOrUndefined(id, 'deletePet');

        return {
            path: '/pets/{id}'.replace('{id}', encodeURI(id)),
            method: 'DELETE',
        };
    };

    /**
     * Returns a user based on a single ID, if the user does not have access to the pet
     */
    static readonly findPetById = ({ id }: FindPetByIdRequest): RequestOpts => {
        throwIfNullOrUndefined(id, 'findPetById');

        return {
            path: '/pets/{id}'.replace('{id}', encodeURI(id)),
            method: 'GET',
        };
    };

    /**
     * Returns all pets from the system that the user has access to Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.  Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien. 
     */
    static readonly findPets = ({ tags, limit }: FindPetsRequest): RequestOpts => {

        const query: HttpQuery = {};

        if (tags != null) { query['tags'] = tags; }
        if (limit != null) { query['limit'] = limit; }

        return {
            path: '/pets',
            method: 'GET',
            query,
        };
    };

}

/**
 * no description
 */
export class DefaultApi extends BaseAPI {

    /**
     * Creates a new pet in the store. Duplicates are allowed
     */
    addPet(params: AddPetRequest): Observable<AddPetResponse>;
    addPet(params: AddPetRequest, includeProgress: boolean): Observable<AddPetResponse | ProgressResponse>;
    addPet(params: AddPetRequest, includeProgress = false) {
        return this.executeRequest(DefaultApiRequests.addPet(params), this.addPetResponseConversion, includeProgress);
    }

    private readonly addPetResponseConversion = (res: ResponseArgs) => ({
                    statusCode: [
                        200,
                    ].indexOf(res.status) === -1 ? 'other' : res.status,
                    data: res.response,
                    response: res,
                }) as AddPetResponse;

    /**
     * deletes a single pet based on the ID supplied
     */
    deletePet(params: DeletePetRequest): Observable<DeletePetResponse>;
    deletePet(params: DeletePetRequest, includeProgress: boolean): Observable<DeletePetResponse | ProgressResponse>;
    deletePet(params: DeletePetRequest, includeProgress = false) {
        return this.executeRequest(DefaultApiRequests.deletePet(params), this.deletePetResponseConversion, includeProgress);
    }

    private readonly deletePetResponseConversion = (res: ResponseArgs) => ({
                    statusCode: [
                        204,
                    ].indexOf(res.status) === -1 ? 'other' : res.status,
                    data: res.response,
                    response: res,
                }) as DeletePetResponse;

    /**
     * Returns a user based on a single ID, if the user does not have access to the pet
     */
    findPetById(params: FindPetByIdRequest): Observable<FindPetByIdResponse>;
    findPetById(params: FindPetByIdRequest, includeProgress: boolean): Observable<FindPetByIdResponse | ProgressResponse>;
    findPetById(params: FindPetByIdRequest, includeProgress = false) {
        return this.executeRequest(DefaultApiRequests.findPetById(params), this.findPetByIdResponseConversion, includeProgress);
    }

    private readonly findPetByIdResponseConversion = (res: ResponseArgs) => ({
                    statusCode: [
                        200,
                    ].indexOf(res.status) === -1 ? 'other' : res.status,
                    data: res.response,
                    response: res,
                }) as FindPetByIdResponse;

    /**
     * Returns all pets from the system that the user has access to Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.  Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien. 
     */
    findPets(params: FindPetsRequest): Observable<FindPetsResponse>;
    findPets(params: FindPetsRequest, includeProgress: boolean): Observable<FindPetsResponse | ProgressResponse>;
    findPets(params: FindPetsRequest, includeProgress = false) {
        return this.executeRequest(DefaultApiRequests.findPets(params), this.findPetsResponseConversion, includeProgress);
    }

    private readonly findPetsResponseConversion = (res: ResponseArgs) => ({
                    statusCode: [
                        200,
                    ].indexOf(res.status) === -1 ? 'other' : res.status,
                    data: res.response,
                    response: res,
                }) as FindPetsResponse;

}
"
`;

exports[`typescript-rxjs petstore.yaml can generate the files: C:\\Users\\mattd\\Source\\openapi-codegen\\generators\\typescript-rxjs\\out.local.petstore\\apis\\index.ts 1`] = `
"/* eslint-disable */
export * from './DefaultApi';
"
`;

exports[`typescript-rxjs petstore.yaml can generate the files: C:\\Users\\mattd\\Source\\openapi-codegen\\generators\\typescript-rxjs\\out.local.petstore\\index.ts 1`] = `
"/* eslint-disable */
export * from './runtime';
export * from './apis';
export * from './models';
"
`;

exports[`typescript-rxjs petstore.yaml can generate the files: C:\\Users\\mattd\\Source\\openapi-codegen\\generators\\typescript-rxjs\\out.local.petstore\\models\\ModelError.ts 1`] = `
"/* eslint-disable */
/**
 * Swagger Petstore
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Templates provided by Principle. (https://github.com/mdekrey/principle-studios-openapi-generators)
 * Do not edit the class manually.
 */

/* eslint-disable */
/**
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * @type {number}
     * @memberof ModelError
     */
    code: number;
    /**
     * @type {string}
     * @memberof ModelError
     */
    message: string;
}
"
`;

exports[`typescript-rxjs petstore.yaml can generate the files: C:\\Users\\mattd\\Source\\openapi-codegen\\generators\\typescript-rxjs\\out.local.petstore\\models\\NewPet.ts 1`] = `
"/* eslint-disable */
/**
 * Swagger Petstore
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Templates provided by Principle. (https://github.com/mdekrey/principle-studios-openapi-generators)
 * Do not edit the class manually.
 */

/* eslint-disable */
/**
 * @export
 * @interface NewPet
 */
export interface NewPet {
    /**
     * @type {string}
     * @memberof NewPet
     */
    name: string;
    /**
     * @type {string}
     * @memberof NewPet
     */
    tag?: string;
}
"
`;

exports[`typescript-rxjs petstore.yaml can generate the files: C:\\Users\\mattd\\Source\\openapi-codegen\\generators\\typescript-rxjs\\out.local.petstore\\models\\Pet.ts 1`] = `
"/* eslint-disable */
/**
 * Swagger Petstore
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Templates provided by Principle. (https://github.com/mdekrey/principle-studios-openapi-generators)
 * Do not edit the class manually.
 */

/* eslint-disable */
import {
    NewPet,
    PetAllOf,
} from './';

/**
 * @type Pet
 * @export
 */
export type Pet = NewPet & PetAllOf;
"
`;

exports[`typescript-rxjs petstore.yaml can generate the files: C:\\Users\\mattd\\Source\\openapi-codegen\\generators\\typescript-rxjs\\out.local.petstore\\models\\PetAllOf.ts 1`] = `
"/* eslint-disable */
/**
 * Swagger Petstore
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Templates provided by Principle. (https://github.com/mdekrey/principle-studios-openapi-generators)
 * Do not edit the class manually.
 */

/* eslint-disable */
/**
 * @export
 * @interface PetAllOf
 */
export interface PetAllOf {
    /**
     * @type {number}
     * @memberof PetAllOf
     */
    id: number;
}
"
`;

exports[`typescript-rxjs petstore.yaml can generate the files: C:\\Users\\mattd\\Source\\openapi-codegen\\generators\\typescript-rxjs\\out.local.petstore\\models\\index.ts 1`] = `
"/* eslint-disable */
export * from './ModelError';
export * from './NewPet';
export * from './Pet';
export * from './PetAllOf';
"
`;

exports[`typescript-rxjs petstore.yaml can generate the files: C:\\Users\\mattd\\Source\\openapi-codegen\\generators\\typescript-rxjs\\out.local.petstore\\runtime.ts 1`] = `
"/* eslint-disable */
/**
 * Swagger Petstore
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Templates provided by Principle. (https://github.com/mdekrey/principle-studios-openapi-generators)
 * Do not edit the class manually.
 */

import { Observable, Subject, Subscriber, merge } from 'rxjs';
import { ajax, AjaxRequest, AjaxResponse } from 'rxjs/ajax';
import { map, shareReplay, takeUntil } from 'rxjs/operators';

export const BASE_PATH = 'http://petstore.swagger.io/api'.replace(/\\\\/+$/, '');

export type StandardResponse<TStatusCode extends (number | 'other'), TResponseType = unknown> =
    {
        statusCode: TStatusCode;
        data: TResponseType;
        response: ResponseArgs;
    };
export type ProgressResponse = { statusCode: 'progress'; data: ProgressEvent; };

export type ConfigurationParameters = {
    basePath: string; // override base path
    username: string | undefined; // parameter for basic security
    password: string | undefined; // parameter for basic security
    apiKey: undefined | string | ((name: string) => string); // parameter for apiKey security
    accessToken: undefined | string | ((name?: string, scopes?: string[]) => string); // parameter for oauth2 security
    rxjsRequest: (params: RequestArgs) => Observable<AjaxResponse>;
};

/**
 * This is the base class for all generated API classes.
 */
export class BaseAPI {
    protected configuration: ConfigurationParameters;

    constructor(configuration: Partial<ConfigurationParameters> = {}) {
        this.configuration = {
            basePath: configuration.basePath === undefined ? BASE_PATH : configuration.basePath,
            username: configuration.username || undefined,
            password: configuration.password || undefined,
            apiKey: configuration.apiKey || undefined,
            accessToken: configuration.accessToken || undefined,
            rxjsRequest: configuration.rxjsRequest || ajax,
        };
    }

    protected executeRequest<T extends StandardResponse<any, any>>(requestOpts: RequestOpts, transform: (res: AjaxResponse) => T): Observable<T>;
    protected executeRequest<T extends StandardResponse<any, any>>(requestOpts: RequestOpts, transform: (res: AjaxResponse) => T, includeProgress: boolean): Observable<T | ProgressResponse>;
    protected executeRequest<T extends StandardResponse<any, any>>(requestOpts: RequestOpts, transform: (res: AjaxResponse) => T, includeProgress = false) {
        if (!includeProgress)
            return this.configuration.rxjsRequest(this.createRequestArgs(requestOpts)).pipe(map(transform));
        return new Observable<T | ProgressResponse>(observer => {
            const progressSubscriber = new Subscriber<ProgressEvent>(
                progressEvent => observer.next(({ statusCode: 'progress', data: progressEvent })),
                error => observer.error(error),
                // Forward next and error but not complete
                // When progress is complete, we send the response *then* complete.
                () => {},
            );
            const subscription = this.configuration.rxjsRequest({
                    ...this.createRequestArgs(requestOpts),
                    progressSubscriber,
                })
                .pipe(map(transform))
                .subscribe(observer);
            return () => subscription.unsubscribe();
        });
    }

    private readonly createRequestArgs = (requestOpts: RequestOpts): RequestArgs => {
        let url = this.configuration.basePath + requestOpts.path;
        if (requestOpts.query !== undefined && Object.keys(requestOpts.query).length !== 0) {
            // only add the queryString to the URL if there are query parameters.
            // this is done to avoid urls ending with a '?' character which buggy webservers
            // do not handle correctly sometimes.
            url += '?' + queryString(requestOpts.query);
        }

        return {
            url,
            method: requestOpts.method,
            headers: requestOpts.headers,
            body: requestOpts.body instanceof FormData ? requestOpts.body : JSON.stringify(requestOpts.body),
            responseType: requestOpts.responseType || 'json',
        };
    }
}

/**
 * @deprecated
 * export for not being a breaking change
 */
export class RequiredError extends Error {
    name: 'RequiredError' = 'RequiredError';
}

export const COLLECTION_FORMATS = {
    csv: ',',
    ssv: ' ',
    tsv: '\\\\t',
    pipes: '|',
};

export type Json = any;
export type HttpMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';
export type HttpHeaders = { [key: string]: string };
export type HttpQuery = Partial<{ [key: string]: string | number | null | boolean | Array<string | number | null | boolean> }>; // partial is needed for strict mode
export type HttpBody = Json | FormData;

export interface RequestOpts {
    path: string;
    method: HttpMethod;
    headers?: HttpHeaders;
    query?: HttpQuery;
    body?: HttpBody;
    responseType?: 'json' | 'blob' | 'arraybuffer' | 'text';
}

export const encodeURI = (value: any) => encodeURIComponent(String(value));

const queryString = (params: HttpQuery): string => Object.keys(params)
    .map((key) => {
        const value = params[key];
        return (value instanceof Array)
            ? value.map((val) => \`\${encodeURI(key)}=\${encodeURI(val)}\`).join('&')
            : \`\${encodeURI(key)}=\${encodeURI(value)}\`;
    })
    .join('&');

// alias fallback for not being a breaking change
export const querystring = queryString;

/**
 * @deprecated
 */
export const throwIfRequired = (params: {[key: string]: any}, key: string, nickname: string) => {
    if (!params || params[key] == null) {
        throw new RequiredError(\`Required parameter \${key} was null or undefined when calling \${nickname}.\`);
    }
};

export const throwIfNullOrUndefined = (value: any, nickname?: string) => {
    if (value == null) {
        throw new Error(\`Parameter \\"\${value}\\" was null or undefined when calling \\"\${nickname}\\".\`);
    }
};

// alias for easier importing
export type RequestArgs = AjaxRequest;
export type ResponseArgs = AjaxResponse;
"
`;
