/*
 * OAuth Scopes Sample
 *
 * A sample API that uses oauth scopes
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://principle.tools
 */
#nullable enable
#nullable disable warnings
#pragma warning disable

namespace PS.Controller
{ 
    public static class Operations
    {
        
        /// <param name="data">base-64 encoded data</param>
        public static global::System.Threading.Tasks.Task<global::System.Net.Http.HttpResponseMessage> SendGetInfoAsync(
            this global::System.Net.Http.HttpClient client,
            byte[]? data,
            global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken)
        ) => client.SendAsync(GetInfo(data));

        public static global::System.Net.Http.HttpRequestMessage GetInfo(
            byte[]? data
            )
        {
            var requestMessage = new global::System.Net.Http.HttpRequestMessage(global::System.Net.Http.HttpMethod.Get, "/api/info");


            return requestMessage;
        }

        public static global::System.Threading.Tasks.Task<IGetInfoTypeSafeResult> ParseGetInfoTypeSafe(this global::System.Net.Http.HttpResponseMessage response)
        {
            throw new global::System.NotImplementedException();
        }

        public interface IGetInfoTypeSafeResult
        {
            
            /// <summary>
            /// Sample Response
            /// </summary>
            public readonly struct Ok : IGetInfoTypeSafeResult
            {
                public string Body { get; }
                
            }
            
        }
    }
}
