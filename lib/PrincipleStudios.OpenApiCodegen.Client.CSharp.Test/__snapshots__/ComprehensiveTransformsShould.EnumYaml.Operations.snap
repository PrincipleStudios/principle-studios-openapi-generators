/*
 * Rock Paper Scissors
 *
 * A sample API that uses enums to play rock-paper-scissors
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://principle.tools
 */
#nullable enable
#nullable disable warnings
#pragma warning disable

namespace PS.Controller
{ 
    public static class Operations
    {
        
        /// <param name="playRockPaperScissorsBody"></param>
        public static Task<global::System.Net.Http.HttpResponseMessage> SendPlayRockPaperScissorsAsync(
            this global::System.Net.Http.HttpClient client,
            PlayRockPaperScissorsRequest playRockPaperScissorsBody,
            global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken)
        ) => client.SendAsync(PlayRockPaperScissors(playRockPaperScissorsBody));

        public static global::System.Net.Http.HttpRequestMessage PlayRockPaperScissors(
            PlayRockPaperScissorsRequest playRockPaperScissorsBody
            )
        {
            throw new global::System.NotImplementedException();
        }

        public static global::System.Threading.Tasks.Task<PlayRockPaperScissorsTypeSafeResult> ParsePlayRockPaperScissorsTypeSafe(this global::System.Net.Http.HttpResponseMessage response)
        {
            throw new global::System.NotImplementedException();
        }

        public readonly struct PlayRockPaperScissorsTypeSafeResult
        {
            
            /// <summary>
            /// One player won
            /// </summary>
            public readonly struct Ok : PlayRockPaperScissorsTypeSafeResult
            {
                public PlayRockPaperScissorsResponse Body { get; set; }
                
            }
            
            /// <summary>
            /// Tie
            /// </summary>
            public readonly struct Conflict : PlayRockPaperScissorsTypeSafeResult
            {
                
            }
            
        }
    }
}
