exports[`operations/lookupRecord.ts`] = `/*
 * No Refs Demo
 *
 * A sample API that uses no refs
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://principle.tools
 */
import { HttpHeaders, HttpQuery, RequestOpts, ResponseArgs, throwIfNullOrUndefined, encodeURI, RequestConversion, StandardResponse, TransformRequest } from '@principlestudios/openapi-codegen-typescript';

export type RequestParams = {
};
export type RequestBodies = {
    'application/json': { "formattedAddress": string; "location": { "latitude": number; "longitude": number } };
};

export type StructuredResponses = {
    /** unexpected error */
    'other': {
        'application/json': { "code": string; "message": string };
    };
    200: {
        'application/json': { "id": string };
    };
    409: {
        'application/json': { "multiple": Array<{ "formattedAddress": string; "location": { "latitude": number; "longitude": number } }> };
    };
};
export type Responses = 
    | StandardResponse<'other', 'application/json', { "code": string; "message": string }>
    | StandardResponse<200, 'application/json', { "id": string }>
    | StandardResponse<409, 'application/json', { "multiple": Array<{ "formattedAddress": string; "location": { "latitude": number; "longitude": number } }> }>;

export function lookupRecord<K extends keyof RequestBodies>(params: RequestParams, body: RequestBodies[K], mimeType: K): RequestOpts;
export function lookupRecord(params: RequestParams, body: RequestBodies[keyof RequestBodies] | null = null, mimeType: keyof RequestBodies | null = null): RequestOpts {
    throwIfNullOrUndefined(params, 'params');
    throwIfNullOrUndefined(body, 'body');
    throwIfNullOrUndefined(mimeType, 'mimeType');

    const headers: HttpHeaders = {};
    if (mimeType) headers['Content-Type'] = mimeType;

    return {
        path: '/address',
        method: 'POST',
        headers,
        body,
    };
}

export const responseConversion = (res: ResponseArgs) => ({
        statusCode: [
            200,
            409,
        ].indexOf(res.status) === -1 ? 'other' : res.status,
        mimeType: res.getResponseHeader("Content-Type"),
        data: res.response,
        response: res,
    }) as Responses;

export const conversion: RequestConversion<RequestParams, RequestBodies, Responses, 'body'> = {
    request: lookupRecord,
    response: responseConversion,
};

`;

exports[`operations/getPhoto.ts`] = `/*
 * No Refs Demo
 *
 * A sample API that uses no refs
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://principle.tools
 */
import { HttpHeaders, HttpQuery, RequestOpts, ResponseArgs, throwIfNullOrUndefined, encodeURI, RequestConversion, StandardResponse, TransformRequest } from '@principlestudios/openapi-codegen-typescript';

export type RequestParams = {
    id: string;
};
export type RequestBodies = {
};

export type StructuredResponses = {
    /** unexpected error */
    'other': {
        'application/json': { "code": string; "message": string };
    };
    200: {
        'application/octet-stream': string;
    };
};
export type Responses = 
    | StandardResponse<'other', 'application/json', { "code": string; "message": string }>
    | StandardResponse<200, 'application/octet-stream', string>;

export function getPhoto(params: RequestParams): RequestOpts;
export function getPhoto(params: RequestParams): RequestOpts {
    throwIfNullOrUndefined(params, 'params');
    throwIfNullOrUndefined(params.id, 'id');

    const headers: HttpHeaders = {};

    return {
        path: '/photo/{id}'.replace('{id}', encodeURI(params.id)),
        method: 'GET',
        headers,
    };
}

export const responseConversion = (res: ResponseArgs) => ({
        statusCode: [
            200,
        ].indexOf(res.status) === -1 ? 'other' : res.status,
        mimeType: res.getResponseHeader("Content-Type"),
        data: res.response,
        response: res,
    }) as Responses;

export const conversion: RequestConversion<RequestParams, {}, Responses, 'no-body'> = {
    request: getPhoto,
    response: responseConversion,
};

`;

exports[`operations/index.ts`] = `/*
 * No Refs Demo
 *
 * A sample API that uses no refs
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://principle.tools
 */
import { conversion as lookupRecord } from './lookupRecord';
import { conversion as getPhoto } from './getPhoto';

export default {
    lookupRecord,
    getPhoto,
} as const;
`;

