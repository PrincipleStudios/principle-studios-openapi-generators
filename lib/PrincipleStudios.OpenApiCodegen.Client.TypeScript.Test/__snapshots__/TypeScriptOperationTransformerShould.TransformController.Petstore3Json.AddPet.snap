/*
 * Swagger Petstore
 *
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://principle.tools
 */
import { HttpHeaders, HttpQuery, RequestOpts, ResponseArgs, throwIfNullOrUndefined, encodeURI, RequestConversion, StandardResponse, TransformRequest } from '@principlestudios/openapi-codegen-typescript';
import {
    Pet,
} from './../models/Pet';

export type RequestParams = {
};
export type RequestBodies = {
    'application/json': Pet;
    'application/xml': Pet;
};

export type StructuredResponses = {
    /** Invalid input */
    405: {
        '': undefined;
    };
};
export type Responses = 
    | StandardResponse<405, '', undefined>;

export function addPet<K extends keyof RequestBodies>(params: RequestParams, body: RequestBodies[K], mimeType: K): RequestOpts;
export function addPet(params: RequestParams, body: RequestBodies[keyof RequestBodies] | null = null, mimeType: keyof RequestBodies | null = null): RequestOpts {
    throwIfNullOrUndefined(params, 'params');
    throwIfNullOrUndefined(body, 'body');
    throwIfNullOrUndefined(mimeType, 'mimeType');

    const headers: HttpHeaders = {};
    if (mimeType) headers['Content-Type'] = mimeType;

    return {
        path: '/pet',
        method: 'POST',
        headers,
        body,
    };
}

export const responseConversion = (res: ResponseArgs) => ({
        statusCode: [
            405,
        ].indexOf(res.status) === -1 ? 'other' : res.status,
        mimeType: res.getResponseHeader("Content-Type"),
        data: res.response,
        response: res,
    }) as Responses;

export const conversion: RequestConversion<RequestParams, RequestBodies, Responses, 'body'> = {
    request: addPet,
    response: responseConversion,
};

