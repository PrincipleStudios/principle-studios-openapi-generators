/*
 * Swagger Petstore
 *
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://principle.tools
 */
import { HttpHeaders, HttpQuery, throwIfNullOrUndefined, encodeURI, RequestConversions, RequestOpts, ResponseArgs, StandardResponse } from '@principlestudios/openapi-codegen-typescript';
import {
    Pet,
} from './../models/Pet';

export type RequestParams = {
};
export type RequestBodies = {
    'application/json': {
        body: Pet;
    };
    'application/xml': {
        body: Pet;
    };
};

export type Responses = {
    /** Invalid input */
    405: {
        '': undefined;
    };
};

export function addPet<K extends keyof RequestBodies>(params: RequestParams, body: RequestBodies[K], mimeType: K): RequestOpts;
export function addPet(params: RequestParams, body?: RequestBodies[keyof RequestBodies], mimeType?: keyof RequestBodies): RequestOpts {
    throwIfNullOrUndefined(params, 'params');
    if (mimeType) throwIfNullOrUndefined(body, 'body');
    if (body) throwIfNullOrUndefined(mimeType, 'mimeType');

    const headers: HttpHeaders = {
        'Content-Type': mimeType,
    };

    return {
        path: '/pet',
        method: 'POST',
        headers,
        body,
    };
}

export const responseConversion = (res: ResponseArgs) => ({
        statusCode: [
            405,
        ].indexOf(res.status) === -1 ? 'other' : res.status,
        mimeType: res.xhr.getResponseHeader("Content-Type"),
        data: res.response,
        response: res,
    }) as StandardResponse<Responses>;

export const conversion: RequestConversions<RequestParams, | RequestBodies, Responses> = {
    request: addPet,
    response: responseConversion,
};

