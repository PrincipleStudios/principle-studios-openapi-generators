/*
 * Swagger Petstore
 *
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://principle.tools
 */
import { HttpHeaders, HttpQuery, RequestOpts, ResponseArgs, throwIfNullOrUndefined, encodeURI, RequestConversion, StandardResponse, TransformRequest } from '@principlestudios/openapi-codegen-typescript';
import {
    _Error,
} from './../models/_Error';
import {
    Pet,
} from './../models/Pet';

export type RequestParams = {
    id: BigInt;
};
export type RequestBodies = {
};

export type StructuredResponses = {
    /** unexpected error */
    'other': {
        'application/json': _Error;
    };
    /** pet response */
    200: {
        'application/json': Pet;
    };
};
export type Responses = 
    | StandardResponse<'other', 'application/json', _Error>
    | StandardResponse<200, 'application/json', Pet>;

export function findPetById(params: RequestParams): RequestOpts;
export function findPetById(params: RequestParams): RequestOpts {
    throwIfNullOrUndefined(params, 'params');
    throwIfNullOrUndefined(params.id, 'id');

    const headers: HttpHeaders = {};

    return {
        path: '/pets/{id}'.replace('{id}', encodeURI(params.id)),
        method: 'GET',
        headers,
    };
}

export const responseConversion = (res: ResponseArgs) => ({
        statusCode: [
            200,
        ].indexOf(res.status) === -1 ? 'other' : res.status,
        mimeType: res.getResponseHeader("Content-Type"),
        data: res.response,
        response: res,
    }) as Responses;

export const conversion: RequestConversion<RequestParams, {}, Responses, 'no-body'> = {
    request: findPetById,
    response: responseConversion,
};

