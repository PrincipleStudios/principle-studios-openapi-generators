/*
 * Swagger Petstore
 *
 * A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://principle.tools
 */
import { HttpHeaders, HttpQuery, throwIfNullOrUndefined, encodeURI, COLLECTION_FORMATS, RequestConversions, RequestOpts, ResponseArgs, ProgressResponse, StandardResponse } from '@principlestudios/openapi-codegen-typescript';
import {
    Error,
} from './../models/Error';
import {
    Pet,
} from './../models/Pet';

export type RequestParams = {
    id: BigInt;
};
export type RequestBodies = {
};

export type Responses = {
    /** unexpected error */
    'other': {
        'application/json': Error;
    };
    /** pet response */
    200: {
        'application/json': Pet;
    };
};

export function findPetById(params: RequestParams): RequestOpts;
export function findPetById(params: RequestParams): RequestOpts {
    throwIfNullOrUndefined(params, 'params');
    throwIfNullOrUndefined(params.id, 'id');

    const headers: HttpHeaders = {
    };

    return {
        path: '/pets/{id}'.replace('{id}', encodeURI(params.id)),
        method: 'GET',
        headers,
    };
}

export const responseConversion = (res: ResponseArgs) => ({
        statusCode: [
            200,
        ].indexOf(res.status) === -1 ? 'other' : res.status,
        mimeType: res.xhr.getResponseHeader("Content-Type"),
        data: res.response,
        response: res,
    }) as StandardResponse<Responses>;

export const conversion: RequestConversions<RequestParams,  | undefined, Responses> = {
    request: findPetById,
    response: responseConversion,
};

