/*
 * Swagger Petstore
 *
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://principle.tools
 */
#pragma warning disable

namespace Microsoft.Extensions.DependencyInjection
{
    public static partial class OpenApiControllerRegistrationExtensions
    {
        public static IMvcBuilder AddOpenApiSwaggerPetstore<TPetController, TPetFindByStatusController, TPetFindByTagsController, TPetPetIdController, TPetPetIdUploadImageController, TStoreInventoryController, TStoreOrderController, TStoreOrderOrderIdController, TUserController, TUserCreateWithArrayController, TUserCreateWithListController, TUserLoginController, TUserLogoutController, TUserUsernameController>(this IServiceCollection services)
            where TPetController : global::PS.Controller.PetControllerBase
            where TPetFindByStatusController : global::PS.Controller.PetFindByStatusControllerBase
            where TPetFindByTagsController : global::PS.Controller.PetFindByTagsControllerBase
            where TPetPetIdController : global::PS.Controller.PetPetIdControllerBase
            where TPetPetIdUploadImageController : global::PS.Controller.PetPetIdUploadImageControllerBase
            where TStoreInventoryController : global::PS.Controller.StoreInventoryControllerBase
            where TStoreOrderController : global::PS.Controller.StoreOrderControllerBase
            where TStoreOrderOrderIdController : global::PS.Controller.StoreOrderOrderIdControllerBase
            where TUserController : global::PS.Controller.UserControllerBase
            where TUserCreateWithArrayController : global::PS.Controller.UserCreateWithArrayControllerBase
            where TUserCreateWithListController : global::PS.Controller.UserCreateWithListControllerBase
            where TUserLoginController : global::PS.Controller.UserLoginControllerBase
            where TUserLogoutController : global::PS.Controller.UserLogoutControllerBase
            where TUserUsernameController : global::PS.Controller.UserUsernameControllerBase
        {
            return services.AddControllers().AddNewtonsoftJson();
        }
    }
}
