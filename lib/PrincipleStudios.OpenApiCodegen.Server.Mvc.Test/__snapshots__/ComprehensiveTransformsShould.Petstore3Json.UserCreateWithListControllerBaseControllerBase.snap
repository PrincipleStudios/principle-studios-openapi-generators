/*
 * Swagger Petstore
 *
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://principle.tools
 */
#nullable enable
#nullable disable warnings

namespace PS.Controller
{ 
    /// <summary>
    public abstract class UserCreateWithListControllerBase : global::Microsoft.AspNetCore.Mvc.ControllerBase
    {
        
        /// <summary>
        /// Creates list of users with given input array
        /// </summary>
        /// <param name="createUsersWithListInputBody"></param>
        [global::Microsoft.AspNetCore.Mvc.HttpPost]
        [global::Microsoft.AspNetCore.Mvc.Route("/user/createWithList")]
        [global::Microsoft.AspNetCore.Mvc.Consumes("application/json")]
        // successful operation

        public async global::System.Threading.Tasks.Task<global::Microsoft.AspNetCore.Mvc.IActionResult> CreateUsersWithListInput(
            [global::Microsoft.AspNetCore.Mvc.FromBody, global::System.ComponentModel.DataAnnotations.Required] global::System.Collections.Generic.IEnumerable<_User> createUsersWithListInputBody
        ) => (await CreateUsersWithListInputTypeSafe(createUsersWithListInputBody)).ActionResult;

        protected abstract global::System.Threading.Tasks.Task<TypeSafeCreateUsersWithListInputResult> CreateUsersWithListInputTypeSafe(
            global::System.Collections.Generic.IEnumerable<_User> createUsersWithListInputBody);

        public readonly struct TypeSafeCreateUsersWithListInputResult
        {
            public readonly global::Microsoft.AspNetCore.Mvc.IActionResult ActionResult;

            private TypeSafeCreateUsersWithListInputResult(global::Microsoft.AspNetCore.Mvc.IActionResult ActionResult)
            {
                this.ActionResult = ActionResult;
            }

            private TypeSafeCreateUsersWithListInputResult(int statusCode)
                : this(new global::Microsoft.AspNetCore.Mvc.StatusCodeResult(statusCode))
            {
            }

            private TypeSafeCreateUsersWithListInputResult(int statusCode, string mediaType, global::System.Type declaredType, object? resultObject)
                : this(new global::Microsoft.AspNetCore.Mvc.ObjectResult(resultObject)
                {
                    ContentTypes = new global::Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection { { new global::Microsoft.Net.Http.Headers.MediaTypeHeaderValue(mediaType) } },
                    DeclaredType = declaredType,
                    StatusCode = statusCode
                })
            {
            }
            

            /// <summary>Allows for action results not specified in the API</summary>
            public static TypeSafeCreateUsersWithListInputResult Unsafe(global::Microsoft.AspNetCore.Mvc.IActionResult actionResult) =>
                new TypeSafeCreateUsersWithListInputResult(actionResult);
        }
    }
}
